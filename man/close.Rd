% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/cluster_experiment.R,
%   R/h5neurovec.R, R/h5neurovol.R, R/labeled_vec.R
\name{close}
\alias{close}
\alias{close,H5ClusterExperiment-method}
\alias{close,H5NeuroVec-method}
\alias{close,H5NeuroVol-method}
\alias{close,LabeledVolumeSet-method}
\title{Close an Object}
\usage{
close(con, ...)

\S4method{close}{H5ClusterExperiment}(con, ...)

\S4method{close}{H5NeuroVec}(con, ...)

\S4method{close}{H5NeuroVol}(con, ...)

\S4method{close}{LabeledVolumeSet}(con, ...)
}
\arguments{
\item{con}{A \\code{LabeledVolumeSet} object.}

\item{...}{Additional arguments (ignored).}
}
\value{
Usually returns NULL invisibly

NULL invisibly

Invisibly returns \code{NULL}.

Invisibly returns \code{NULL}.

Invisibly returns \\code{NULL}.
}
\description{
Close connections or release resources associated with an object.
This generic is used for objects that manage external resources like
HDF5 file handles.

This method manually closes the HDF5 file handle stored within the
H5NeuroVec object. It uses the \code{safe_h5_close} helper.

This method manually closes the HDF5 file handle stored within the
H5NeuroVol object. It uses the \code{safe_h5_close} helper.

This method manually closes the HDF5 file handle stored within the
LabeledVolumeSet object. It uses the \\code{safe_h5_close} helper to
ensure the handle is valid before attempting to close. After closing,
the internal handle reference is nulled to prevent accidental reuse.
}
\details{
**Important:** If this \code{LabeledVolumeSet} object was created from
a file path using \code{\link{read_labeled_vec}}, the user is responsible
for calling this \code{close} method when finished with the object to release
the file handle. Failure to do so will leave the file open until the R session ends.
If the object was created using an existing \code{H5File} handle, closing
remains the responsibility of the code that originally opened the handle.
}
\examples{
\dontrun{
# Example with LabeledVolumeSet
if (!is.null(fmristore:::create_minimal_h5_for_LabeledVolumeSet)) {
  temp_file <- fmristore:::create_minimal_h5_for_LabeledVolumeSet()
  lvs <- read_labeled_vec(temp_file)
  # Use the object...
  close(lvs) # Close the HDF5 file handle
  unlink(temp_file)
}
}

}
\seealso{
Other H5Cluster: 
\code{\link{$,H5ClusterExperiment-method}},
\code{\link{H5ClusterExperiment}},
\code{\link{H5ClusterExperiment-class}},
\code{\link{H5ClusterRun-class}},
\code{\link{H5ClusterRunSummary-class}},
\code{\link{H5ClusteredArray-class}},
\code{\link{[,H5ClusterRun,ANY,ANY,ANY-method}},
\code{\link{[,H5ClusterRun,ANY,missing,ANY-method}},
\code{\link{as.data.frame}()},
\code{\link{as.matrix}()},
\code{\link{cluster_metadata,H5ClusterExperiment-method}},
\code{\link{clusters}()},
\code{\link{dim}()},
\code{\link{h5file,H5ClusteredArray-method}},
\code{\link{linear_access-methods}},
\code{\link{make_run_full}()},
\code{\link{make_run_summary}()},
\code{\link{mask}()},
\code{\link{matrix_concat}()},
\code{\link{n_scans,H5ClusterExperiment-method}},
\code{\link{scan_metadata,H5ClusterExperiment-method}},
\code{\link{scan_names,H5ClusterExperiment-method}},
\code{\link{series}()},
\code{\link{series_concat}()},
\code{\link{show,H5ClusterRun-method}}
}
\concept{H5Cluster}
