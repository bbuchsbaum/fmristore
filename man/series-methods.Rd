% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/latent_vec.R, R/neurovec_hdf5.R
\name{series,LatentNeuroVec,integer-method}
\alias{series,LatentNeuroVec,integer-method}
\alias{series,LatentNeuroVec,numeric-method}
\alias{series,H5NeuroVec,integer-method}
\alias{series,H5NeuroVec,numeric-method}
\alias{series,H5NeuroVec,matrix-method}
\title{Extract time series from a LatentNeuroVec}
\usage{
\S4method{series}{LatentNeuroVec,integer}(x, i, j, k, drop = TRUE)

\S4method{series}{LatentNeuroVec,numeric}(x, i, j, k, drop = TRUE)

\S4method{series}{H5NeuroVec,integer}(x, i, j, k, drop = TRUE)

\S4method{series}{H5NeuroVec,numeric}(x, i, j, k, drop = TRUE)

\S4method{series}{H5NeuroVec,matrix}(x, i)

\S4method{series}{H5NeuroVec,integer}(x, i, j, k, drop = TRUE)

\S4method{series}{H5NeuroVec,numeric}(x, i, j, k, drop = TRUE)
}
\arguments{
\item{x}{An \code{H5NeuroVec} object (4D).}

\item{i}{Either an integer vector of voxel indices, or a single voxel index (x-axis).}

\item{j, k}{If provided, these must be single integers. Then \code{i,j,k} specify
one voxel in (x,y,z) coordinate space.}

\item{k}{Single voxel index (z-axis), optional if you only pass \code{i}.}

\item{drop}{Logical: if \code{TRUE}, dimensions of size 1 are dropped. Default \code{TRUE}.}

\item{j}{Single voxel index (y-axis), optional if you only pass \code{i}.}
}
\value{
A numeric matrix or vector:
\itemize{
  \item If \code{i} is an integer vector and \code{j,k} are missing, returns
        \code{[nTime, length(i)]}.
  \item If \code{i,j,k} are each length=1, returns a numeric vector of length \code{nTime}.
}

A numeric \code{matrix} or \code{vector}:
\itemize{
  \item If \code{i} is an integer vector and \code{j,k} are missing, returns a \code{[nTime, length(i)]} matrix.
  \item If \code{i,j,k} are each length=1, returns a numeric vector of length \code{nTime}.
}
}
\description{
This method supports two main usages:
\enumerate{
  \item \code{series(x, i)} where \code{i} is an integer vector of voxel indices
    in the 3D linear space (\eqn{1..X \times Y \times Z}). We return a matrix
    \code{[nTime, length(i)]}.
  \item \code{series(x, i, j, k)} where each of \code{i, j, k} is length=1 (a single voxel),
    returning a numeric vector of length \code{nTime}.
}

This method supports two main usages:
\enumerate{
  \item \code{series(x, i)} where \code{i} is an integer vector of voxel indices
    (in 1D linearized form). We return a matrix \code{[nTime, length(i)]}.
  \item \code{series(x, i, j, k)} where \code{i, j, k} are single voxel coordinates,
    returning a vector of length \code{nTime}.
}
}
\details{
Internally, for each time \code{t} we reconstruct
\deqn{\text{volume}_t = \text{basis}[t,\,] \times \text{loadings}^\top + \text{offset}.}
Then we extract the requested voxel(s). Voxels not in the mask are zero.
}
