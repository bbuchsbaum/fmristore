% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/cluster_experiment.R
\name{matrix_concat}
\alias{matrix_concat}
\alias{matrix_concat,H5ClusteredExperiment-method}
\title{Concatenate Cluster Summary Matrices Across Runs (Generic)}
\usage{
matrix_concat(experiment, run_indices = NULL, ...)

\S4method{matrix_concat}{H5ClusteredExperiment}(experiment, run_indices = NULL)
}
\arguments{
\item{experiment}{The experiment object (typically \code{\link{H5ClusteredExperiment-class}}).}

\item{run_indices}{Optional: A numeric or character vector specifying which runs to include.
If NULL, uses all runs that are of summary type or can produce a summary matrix.}

\item{...}{Additional arguments for methods.}
}
\value{
A concatenated matrix (typically time x clusters).
}
\description{
Concatenate Cluster Summary Matrices Across Runs (Generic)
}
\section{Methods (by class)}{
\itemize{
\item \code{matrix_concat(H5ClusteredExperiment)}: Concatenate summary matrices for H5ClusteredExperiment

}}
\examples{
if (!is.null(fmristore:::create_minimal_h5_for_H5ClusteredExperiment)) {
  temp_exp_file <- NULL
  exp_obj <- NULL
  tryCatch({
    temp_exp_file <- fmristore:::create_minimal_h5_for_H5ClusteredExperiment(
      n_time_run2 = 6L # Shorter time series for Run2_Summary
    )
    exp_obj <- fmristore::H5ClusteredExperiment(file_path = temp_exp_file)
    
    # Note: matrix_concat typically works on runs with summary data (H5ClusteredRunSummary)
    # The helper creates "Run2_Summary".
    # concatenated_matrix <- matrix_concat(exp_obj, run_indices = "Run2_Summary")
    # print(dim(concatenated_matrix)) 
    # Should be n_time_run2 x n_master_clusters (e.g., 6x3 if num_master_clusters is 3)
    # print(head(concatenated_matrix))

    # The method should correctly identify and use the summary run.
    # If only one summary run is present, run_indices can often be omitted.
    conc_matrix <- matrix_concat(exp_obj, run_indices = "Run2_Summary")
    print(paste("Dimensions of concatenated matrix from Run2_Summary:", 
                paste(dim(conc_matrix), collapse="x")))

    # Example with all compatible runs (should pick up Run2_Summary)
    # conc_matrix_all <- matrix_concat(exp_obj)
    # print(paste("Dimensions of concatenated matrix from all compatible runs:", 
    #             paste(dim(conc_matrix_all), collapse="x")))

  }, error = function(e) {
    message("matrix_concat example failed: ", e$message)
  }, finally = {
    if (!is.null(exp_obj)) try(close(exp_obj), silent = TRUE)
    if (!is.null(temp_exp_file) && file.exists(temp_exp_file)) {
      unlink(temp_exp_file)
    }
  })
} else {
  message("Skipping matrix_concat example: helper not available.")
}

}
\seealso{
Other H5Clustered: 
\code{\link{$,H5ClusteredExperiment-method}},
\code{\link{H5ClusteredArray-class}},
\code{\link{H5ClusteredExperiment}},
\code{\link{H5ClusteredExperiment-class}},
\code{\link{H5ClusteredRunFull-class}},
\code{\link{H5ClusteredRunSummary-class}},
\code{\link{[,H5ClusteredRunFull,ANY,ANY,ANY-method}},
\code{\link{as.data.frame}()},
\code{\link{as.matrix}()},
\code{\link{cluster_metadata,H5ClusteredExperiment-method}},
\code{\link{clusters}()},
\code{\link{dim}()},
\code{\link{h5file,H5ClusteredArray-method}},
\code{\link{linear_access-methods}},
\code{\link{make_run_full}()},
\code{\link{make_run_summary}()},
\code{\link{mask}()},
\code{\link{n_scans,H5ClusteredExperiment-method}},
\code{\link{scan_metadata,H5ClusteredExperiment-method}},
\code{\link{scan_names,H5ClusteredExperiment-method}},
\code{\link{series # Keep @name if you want the generic itself to be findable by ?series}},
\code{\link{series_concat}()},
\code{\link{show,H5ClusteredRunFull-method}}
}
\concept{H5Clustered}
