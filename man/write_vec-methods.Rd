% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/latent_vec.R
\name{write_vec,LatentNeuroVec,character,missing,missing-method}
\alias{write_vec,LatentNeuroVec,character,missing,missing-method}
\title{Write LatentNeuroVec to HDF5 File}
\usage{
\S4method{write_vec}{LatentNeuroVec,character,missing,missing}(x, file_name, compression = 9, nbit = FALSE)
}
\arguments{
\item{x}{A \code{LatentNeuroVec} to write.}

\item{file_name}{\code{character} file path to the output HDF5.}

\item{compression}{\code{integer} in [1..9] specifying compression level (default: 9).}

\item{nbit}{\code{logical}; if TRUE, uses N-bit compression (default: FALSE).}
}
\value{
Invisible \code{NULL}, called for side effects (writes to disk).
}
\description{
Writes a \code{LatentNeuroVec} to an HDF5 file with optional compression.
}
\details{
This function saves:
\itemize{
  \item \code{basis} matrix
  \item \code{loadings} matrix
  \item \code{offset} vector
  \item Spatial metadata
  \item Mask information
}
all inside an HDF5 file for future loading.
}
\examples{
\dontrun{
if (requireNamespace("neuroim2", quietly = TRUE) &&
    requireNamespace("hdf5r", quietly = TRUE) &&
    requireNamespace("Matrix", quietly = TRUE) && 
    exists("write_vec", where = "package:neuroim2") &&
    !is.null(fmristore:::create_minimal_LatentNeuroVec)) {
  
  lnv <- NULL
  temp_h5_file <- NULL
  
  tryCatch({
    # Create a minimal LatentNeuroVec
    lnv <- fmristore:::create_minimal_LatentNeuroVec(
      space_dims = c(3L, 3L, 2L),
      n_time = 5L,
      n_comp = 2L
    )
    
    # Create a temporary file for output
    temp_h5_file <- tempfile(fileext = ".h5")
    
    # Write the LatentNeuroVec to HDF5
    write_vec(lnv, temp_h5_file, compression = 6)
    
    # Verify file was created
    if (file.exists(temp_h5_file)) {
      cat("Successfully wrote LatentNeuroVec to:", temp_h5_file, "\n")
    }
    
  }, error = function(e) {
    message("write_vec example failed: ", e$message)
  }, finally = {
    # Clean up temporary file
    if (!is.null(temp_h5_file) && file.exists(temp_h5_file)) {
      unlink(temp_h5_file)
    }
  })
}
}

}
\seealso{
\code{\link[neuroim2]{read_vec}} for reading back the file.
}
