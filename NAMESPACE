# Generated by roxygen2: do not edit by hand

S3method(as.array,LatentNeuroVec)
export(H5NeuroVec)
export(H5NeuroVecSeq)
export(H5NeuroVol)
export(H5ParcellatedMultiScan)
export(H5ParcellatedScan)
export(H5ParcellatedScanSummary)
export(H5_ATTRS)
export(H5_DSETS)
export(H5_PATHS)
export(LatentNeuroVec)
export(as_h5)
export(basis)
export(close)
export(cluster_metadata)
export(clusters)
export(configure_memory_warnings)
export(detect_h5_type)
export(get_memory_settings)
export(h5file)
export(loadings)
export(make_run_full)
export(make_run_summary)
export(map)
export(mask)
export(matrix_concat)
export(n_scans)
export(neurovecseq_to_h5)
export(offset)
export(read_dataset)
export(read_labeled_vec)
export(scan_metadata)
export(scan_names)
export(series)
export(series_concat)
export(to_nih5_vec)
export(validate_latent_file)
export(write_cluster_result)
export(write_clustered_experiment_h5)
export(write_dataset)
export(write_labeled_vec)
export(write_parcellated_experiment_h5)
exportClasses(H5NeuroVec)
exportClasses(H5NeuroVecSeq)
exportClasses(H5NeuroVol)
exportClasses(H5ParcellatedArray)
exportClasses(H5ParcellatedMultiScan)
exportClasses(H5ParcellatedScan)
exportClasses(H5ParcellatedScanSummary)
exportClasses(LabeledVolumeSet)
exportClasses(LatentNeuroVec)
exportMethods("$")
exportMethods("[")
exportMethods("[[")
exportMethods(as.data.frame)
exportMethods(as.matrix)
exportMethods(as_h5)
exportMethods(basis)
exportMethods(close)
exportMethods(cluster_metadata)
exportMethods(clusters)
exportMethods(concat)
exportMethods(dim)
exportMethods(h5file)
exportMethods(linear_access)
exportMethods(loadings)
exportMethods(map)
exportMethods(mask)
exportMethods(matrix_concat)
exportMethods(n_scans)
exportMethods(names)
exportMethods(offset)
exportMethods(read_dataset)
exportMethods(scan_metadata)
exportMethods(scan_names)
exportMethods(series)
exportMethods(series_concat)
exportMethods(show)
exportMethods(write_dataset)
exportMethods(write_vec)
import(methods)
importClassesFrom(neuroim2,ArrayLike3D)
importClassesFrom(neuroim2,ClusteredNeuroVol)
importClassesFrom(neuroim2,LogicalNeuroVol)
importFrom(Matrix,Matrix)
importFrom(Matrix,sparseMatrix)
importFrom(Matrix,t)
importFrom(Matrix,tcrossprod)
importFrom(assertthat,assert_that)
importFrom(cli,cli_alert_info)
importFrom(cli,cli_h1)
importFrom(cli,cli_h2)
importFrom(cli,cli_li)
importFrom(cli,cli_text)
importFrom(cli,col_blue)
importFrom(cli,col_green)
importFrom(cli,col_magenta)
importFrom(cli,col_red)
importFrom(cli,col_silver)
importFrom(cli,col_yellow)
importFrom(cli,symbol)
importFrom(crayon,blue)
importFrom(crayon,bold)
importFrom(crayon,green)
importFrom(crayon,italic)
importFrom(crayon,red)
importFrom(crayon,silver)
importFrom(crayon,yellow)
importFrom(hdf5r,H5A)
importFrom(hdf5r,H5D)
importFrom(hdf5r,H5File)
importFrom(hdf5r,H5S)
importFrom(hdf5r,H5T_STRING)
importFrom(hdf5r,h5attr)
importFrom(hdf5r,h5attr_names)
importFrom(hdf5r,h5types)
importFrom(hdf5r,is.h5file)
importFrom(hdf5r,list.datasets)
importFrom(hdf5r,list.groups)
importFrom(lifecycle,deprecate_warn)
importFrom(methods,is)
importFrom(methods,new)
importFrom(methods,setMethod)
importFrom(methods,show)
importFrom(methods,signature)
importFrom(methods,validObject)
importFrom(neuroim2,ClusteredNeuroVol)
importFrom(neuroim2,DenseNeuroVol)
importFrom(neuroim2,IndexLookupVol)
importFrom(neuroim2,LogicalNeuroVol)
importFrom(neuroim2,NeuroSpace)
importFrom(neuroim2,NeuroVecSeq)
importFrom(neuroim2,NeuroVol)
importFrom(neuroim2,SparseNeuroVol)
importFrom(neuroim2,axes)
importFrom(neuroim2,concat)
importFrom(neuroim2,drop_dim)
importFrom(neuroim2,indices)
importFrom(neuroim2,linear_access)
importFrom(neuroim2,load_data)
importFrom(neuroim2,lookup)
importFrom(neuroim2,matricized_access)
importFrom(neuroim2,matrixToQuatern)
importFrom(neuroim2,origin)
importFrom(neuroim2,quaternToMatrix)
importFrom(neuroim2,series)
importFrom(neuroim2,space)
importFrom(neuroim2,spacing)
importFrom(neuroim2,trans)
importFrom(neuroim2,write_vec)
importFrom(utils,head)
importFrom(utils,object.size)
importFrom(utils,packageVersion)
importFrom(utils,write.table)
importFrom(withr,defer)
importMethodsFrom(neuroim2,"[")
importMethodsFrom(neuroim2,linear_access)
